import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/voters.module.css';

export default function Voters() {
  const router = useRouter();
  const [all, updateAll] = useState([]);
  const [msg, setmsg] = useState('Loading...');
  const [position, setposition] = useState('face of 100');
  const [candidates, setcandidates] = useState([]);
  const [voted, setvoted] = useState(false);
  const [votes, updatevotes] = useState([]);
  const [user, setuser] = useState('loading');
  const [matric, setmatric] = useState('');
  const [sub_conf, setsub_conf] = useState(false);
  const [voterr, setvoterr] = useState(false);
  const [votelength, updatevotelength] = useState({ token: 0 });
  const [post, setPost] = useState(false);
  const [tosubmit, settosubmt] = useState(false);

  const [load, setLoad] = useState(false);
  // console.log(candidates);

  const positionChances = () => {
    if (all.length > 0) {
      let currentCandidate = all.filter((c) => c.position === position);

      if (tosubmit === false) {
        currentCandidate = currentCandidate.sort((a, b) => b.vote - a.vote);
      }

      if (currentCandidate.length > 0) {
        setcandidates(currentCandidate);
      } else {
        setcandidates([]);
        setmsg('No candidate for this position yet.');
      }
    } else {
      setmsg('Loading...');
    }
  };

  useEffect(() => {
    const userExist = async () => {
      const query = router.query;
      if (query.y === undefined) {
        return router.push('/login');
      }
      setmatric(query.y + '/' + query.s + '/' + query.c);
      setLoad(true);
      if (query.p !== 'Admin') {
        settosubmt(true);
      }
      const res = await fetch('/api/voter/', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });
      const data = await res.json();
      if (res.status === 200) {
        if (all.length === 0) {
          all.push(...data.candidates);
          positionChances();
        }
      } else {
        setmsg(data['message']);
      }
    };
    userExist();
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
  };
  const handleVote = (e) => {
    const votedcandidate = candidates[e];

    votes[position] === votedcandidate.matric
      ? updatevotes({ ...votes, [position]: '' })
      : updatevotes({ ...votes, [position]: votedcandidate.matric });
  };

  useEffect(() => {
    let num = 0;
    for (let c in votes) {
      if (votes[c] !== '') {
        num = num + 1;
      } else {
      }
    }
    updatevotelength({ ...votelength, token: num });
  }, [votes]);

  const handleVoteSubmission = async () => {
    setvoterr(true);
    if (matric !== '') {
      const res = await fetch('/api/voters', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          votes: votes,
          user: matric,
        }),
      });
      const data = await res.json();

      if (res.status === 200) {
        setvoted(true);
        setmsg(data.message);
      } else {
        setmsg(data.message);
      }
    }
  };

  useEffect(() => {
    positionChances();
  }, [position]);
  return (
    <>
      {load && (
        <>
          <Head>
            <title>Ager Deluxe - Voting</title>
            <meta name="description" content="Generated by create next app" />
            <meta
              name="viewport"
              content="width=device-width, initial-scale=1"
            />
            <link rel="icon" href="/photo.jpg" />
          </Head>
          <main className={!voted ? styles.main : styles.main_voted}>
            <div
              className={
                !voted && sub_conf ? styles.sub_conf : styles.sub_conf_hide
              }
            >
              <div className={styles.sub_cont}>
                <h2 className={styles.sub_cont_heading}>
                  Submission Confirmation
                </h2>
                <p className={styles.sub_cont_msg}>
                  You are about to vote for <b>{votelength['token']}</b>{' '}
                  candidate
                  {votelength['token'] > 1 ? 's' : ''} out of <b>49</b>.{' '}
                  <span className={styles.sub_cont_note}>
                    Are you okay with that?
                  </span>
                </p>
                {votelength['token'] === 0 && (
                  <p className={styles.sub_cont_err}>
                    <span className={styles.alarm}>NOTE:</span> You can&apos;t
                    submit 0 vote.
                  </p>
                )}
                <div className={styles.sub_cont_btns}>
                  <button
                    className={!voterr ? styles.not_sure : styles.not_sure_err}
                    type="button"
                    onClick={() => {
                      setsub_conf(false);
                    }}
                  >
                    Not at all
                  </button>
                  <button
                    className={
                      votelength['token'] !== 0 && !voterr
                        ? styles.sure
                        : styles.sure_err
                    }
                    type="button"
                    onClick={() => {
                      handleVoteSubmission();
                    }}
                  >
                    Sure
                  </button>
                </div>
              </div>
            </div>
            {!voted ? (
              <>
                <div className={styles.content}>
                  <form
                    action="#"
                    method="GET"
                    onSubmit={(e) => handleSubmit(e)}
                  >
                    <div className={styles.position}>
                      <select
                        name="position"
                        className={styles.position_select}
                        value={position}
                        onChange={(e) => setposition(e.target.value)}
                      >
                        <option value="Mr fresher">Mr fresher</option>
                        <option value="Miss fresher">Miss fresher</option>
                        <option value="Face of 200L">Face of 200L</option>
                        <option value="Face of 300L">Face of 300L</option>
                        <option value="Face of 400L">Face of 400L</option>
                        <option value="Face of 500L">Face of 500L</option>
                        <option value="Most political">Most political</option>
                        <option value="Mr Agric">Mr Agric</option>
                        <option value="Miss Agric">Miss Agric</option>
                        <option value="Hour glass">Hour glass</option>
                        <option value="Best wardrobe">Best wardrobe</option>
                        <option value="Entrepreneurship of the Year">
                          Entrepreneurship of the Year
                        </option>
                        <option value="Class rep of the year">
                          Class rep of the year
                        </option>
                        <option value="Sportsmanship Award">
                          Sportsmanship Award
                        </option>
                        <option value="Most expensive Award">
                          Most expensive Award
                        </option>
                        <option value="Photographer of the Year">
                          Photographer of the Year
                        </option>
                        <option value="Media personality of the year">
                          Media personality of the year
                        </option>
                        <option value="Alumni of the Year">
                          Alumni of the Year
                        </option>
                        <option value="Eagle of SAAT">Eagle of SAAT</option>
                        <option value="Falcon of SAAT">Falcon of SAAT</option>
                        <option value="Ambassador of the year">
                          Ambassador of the year
                        </option>
                        <option value="Cool calm  and collected">
                          Cool calm and collected
                        </option>

                        <option value="Best lecturer">Best lecturer</option>
                        <option value="Model of the year">
                          Model of the year
                        </option>
                        <option value="Intellect of the year">
                          Intellect of the year
                        </option>
                        <option value="Hypeman of the year">
                          Hypeman of the year
                        </option>
                        <option value="Face of Agric">Face of Agric</option>
                        <option value="Mr ebony">Mr ebony</option>
                        <option value="Miss ebony">Miss ebony</option>
                        <option value="Slim shady">Slim shady</option>
                        <option value="Big bold and beautiful">
                          Big bold and beautiful
                        </option>
                        <option value="Brand of the Year">
                          Brand of the Year
                        </option>
                        <option value="Artist of the year">
                          Artist of the year
                        </option>
                        <option value="Most influential">
                          Most influential
                        </option>
                        <option value="Most popular">Most popular</option>
                        <option value="Departmental president of the year">
                          Departmental president of the year
                        </option>
                        <option value="Departmental DOS of the year">
                          Departmental DOS of the year
                        </option>
                        <option value="Fashionista & trends">
                          Fashionista & trends
                        </option>
                        <option value="Most reserve M">Most reserve M</option>
                        <option value="Most reserve F">Most reserve F</option>
                        <option value="Executive of the year">
                          Executive of the year
                        </option>
                        <option value="Graphic designer of the year">
                          Graphic designer of the year
                        </option>
                        <option value="Perseverance & Exemplary Award">
                          Perseverance & Exemplary Award
                        </option>

                        <option value="Ambassador of the year">
                          Ambassador of the year
                        </option>
                        <option value="Mc of the year">Mc of the year</option>
                      </select>
                    </div>
                  </form>

                  <div className={styles.voters}>
                    {candidates.length > 0 ? (
                      candidates.map((candidate, i) => (
                        <div className={styles.profile} key={candidate._id}>
                          <Image
                            className={styles.profile_img}
                            src={`https://res.cloudinary.com/david1/${candidate.img}`}
                            alt="Candidate Profile"
                            width={160}
                            height={160}
                          />
                          <div className={styles.profile_cont}>
                            <div className={styles.profile_cont_msg}>
                              <h2 className={styles.fname}>
                                {candidate.fname} {candidate.lname}
                              </h2>
                              <h4 className={styles.nick}>{candidate.nick}</h4>
                              <h4 className={styles.level}>
                                {candidate.faculty}
                              </h4>
                            </div>
                            {tosubmit === true ? (
                              <button
                                type="button"
                                className={
                                  votes[position] === candidate.matric
                                    ? styles.profile_voted
                                    : styles.profile_vote
                                }
                                onClick={() => handleVote(i)}
                              >
                                Vote
                                {votes[position] === candidate.matric
                                  ? 'd'
                                  : ''}
                              </button>
                            ) : (
                              // post === true && (
                              <button
                                type="button"
                                className={styles.profile_vote}
                              >
                                {candidate.vote} votes
                              </button>
                              // )
                            )}
                          </div>
                        </div>
                      ))
                    ) : (
                      <div className={styles.loading}>
                        <h1>{msg}</h1>
                      </div>
                    )}
                    {tosubmit === true && (
                      <button
                        type="submit"
                        className={styles.btn}
                        onClick={() => {
                          setsub_conf(true);
                          // handleVoteSubmission();
                        }}
                      >
                        Submit
                      </button>
                    )}
                  </div>
                </div>
              </>
            ) : (
              <div className={styles.after_reg}>
                <p>Voting Successful!</p>
                <p>Thank you!!!</p>
                <p className={styles.emoji}>&#128151;</p>
              </div>
            )}
          </main>
        </>
      )}
    </>
  );
}
