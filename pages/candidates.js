import axios from 'axios';
import React, { useState } from 'react';
import { WidgetLoader } from 'react-cloudinary-upload-widget';
import Head from 'next/head';
import { useRouter } from 'next/router';
import Image from 'next/image';
import moment from 'moment';

import Logo from '../public/photo.jpg';
import Ager from '../public/photo.jpg';
import Brand from '../public/brand.png';
import Sponsor from '../public/sponsor.png';
import { BsPlusLg } from 'react-icons/bs';
// import FormData from 'form-data';
import styles from '../styles/candidates.module.css';
// components
import Userimg from '../components/Userimg';
import Cloudinary from '../components/Cloudinary';
import cloudStyles from '../styles/cloudinary.module.css';

const CLOUDNAME = process.env.NEXT_PUBLIC_CLOUDNAME;
const UPLOAD_PRESET = process.env.NEXT_PUBLIC_UPLOAD_PRESET;
const API_KEY = process.env.NEXT_PUBLIC_API_KEY;
const TAGS = process.env.NEXT_PUBLIC_TAGS;

export default function Candidates() {
  // const router = useRouter();
  const [fname, setfname] = useState('');
  const [lname, setlname] = useState('');
  const [nick, setnick] = useState('');
  const [matric, setmatric] = useState('');
  const [faculty, setfaculty] = useState('');
  const [position, setposition] = useState('');
  // const [active, setactive] = useState(false);
  const [error, setError] = useState('');
  const [img, setimg] = useState('');
  const [registered, setregistered] = useState(false);

  const [fn, setfn] = useState(false);
  const [ln, setln] = useState(false);
  const [nn, setnn] = useState(false);
  const [mt, setmt] = useState(false);
  const [submit, setsubmit] = useState(false);
  const [file, setFile] = useState();
  const handleEvent = (i) => {
    `set${i}`(true);
  };
  // const handleBlur = (i) => {
  //   inputs[i] === '' && `set${i}`(false);
  // };
  const inputs = [fname, lname, nick, matric];
  const labels = [setfn, setln, setnn, setmt];
  const handleChange = (i) => {
    inputs[i] === '' && labels[i](false);
  };

  const handleUploadImages = async (image) => {
    try {
      try {
        const formData = new FormData();
        formData.append('file', image);
        formData.append('tags', TAGS);
        formData.append('upload_preset', UPLOAD_PRESET);
        formData.append('api_key', API_KEY);
        formData.append(
          'timestamp',
          // eslint-disable-next-line newline-per-chained-call
          moment().utcOffset('+0100').format('LLLL')
        );

        const uploadResponse = await axios.post(
          `https://api.cloudinary.com/v1_1/${CLOUDNAME}/image/upload`,
          formData,
          { headers: { 'X-Requested-With': 'XMLHttpRequest' } }
        );
        return uploadResponse;
      } catch (err) {
        return console.log(err);
      }
    } catch (err) {
      return console.error(err);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    // const d = new FormData();
    console.log(file);

    const data = {};
    data['fname'] = fname.trim();
    data['lname'] = lname.trim();
    data['nick'] = nick.trim();
    data['matric'] = matric.trim().toUpperCase();
    data['faculty'] = faculty.trim();
    data['position'] = position.trim();
    data['img'] = file;

    if (
      (data.fname === '' ||
        data.lname === '' ||
        data.nick === '' ||
        data.faculty === '' ||
        data.position === '',
      data.matric === '')
    ) {
      setError('All fields are required');
      setsubmit(false);
      setTimeout(() => {
        setError('');
      }, 3000);
    } else if (data.img === '') {
      setError('Please upload a passport');
      setsubmit(false);
      setTimeout(() => {
        setError('');
      }, 3000);
    } else {
      const imgData = await handleUploadImages(file);
      data.img = imgData.data.public_id;

      const res = await fetch('/api/candidates', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        // body: d,
        body: JSON.stringify(data),
      });

      const d = await res.json();
      if (res.status === 200) {
        setregistered(true);
      } else {
        setError(d.message);
        setsubmit(false);
        imeout(() => {
          setError('');
        }, 3000);
      }
    }
  };

  return (
    <>
      <Head>
        <title>Ager Deluxe - Candidate</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/photo.jpg" />
      </Head>
      <WidgetLoader />
      <main className={!registered ? styles.main : styles.main_voted}>
        <div
          className={registered ? styles.overlay_normal : styles.overlay}
        ></div>
        <div className={styles.can_cont}>
          <div>
            <section>
              <div
                className={!registered ? styles.content : styles.content_center}
              >
                <div className={styles.content_hero}>
                  <Image
                    className={
                      registered
                        ? styles.content_hero_img_reg
                        : styles.content_hero_img
                    }
                    src={Logo}
                    width={130}
                    height={130}
                    alt="Ager"
                  />
                  <h1 className={styles.heading}> AWARD NOMINATION</h1>
                </div>

                {registered ? (
                  <div className={styles.after_reg}>
                    <p>Nomination Successful!</p>
                    <p>Thank you!!!</p>
                    <p className={styles.emoji}>&#128151;</p>
                  </div>
                ) : (
                  <div className={styles.before_reg}>
                    {file === undefined ? (
                      <label className="flex justify-center content-center m-auto my-5 w-42 h-42">
                        <input
                          name="profile"
                          id="file"
                          type="file"
                          className="text-sm text-grey-500
          file:mr-5 file:py-3 file:px-10
          file:rounded-full file:border-0
          file:text-md file:font-semibold  file:text-white
          file:bg-gradient-to-r file:from-blue-600 file:to-amber-600
          hover:file:cursor-pointer hover:file:opacity-80
        "
                          onChange={(e) => setFile(e.target.files?.[0])}
                        />
                      </label>
                    ) : (
                      <Userimg img={URL.createObjectURL(file)} />
                    )}

                    <section className={styles.full__width}>
                      {error !== '' && <p className={styles.error}>{error}</p>}
                      <form
                        className={styles.form}
                        action="/api/register"
                        method="POST"
                        onSubmit={(e) => handleSubmit(e)}
                      >
                        <div
                          className={
                            img !== ''
                              ? styles.input_group_first
                              : styles.input_group
                          }
                        >
                          <input
                            className={styles.input}
                            autoComplete="off"
                            name="fname"
                            type="text"
                            required=""
                            value={fname}
                            onChange={(e) => setfname(e.target.value)}
                            onFocus={() => setfn(true)}
                            onBlur={() => handleChange(0)}
                          />
                          <label
                            className={fn ? styles.label_active : styles.label}
                          >
                            First Name
                          </label>
                        </div>
                        <div className={styles.input_group}>
                          <input
                            className={styles.input}
                            autoComplete="off"
                            name="lname"
                            type="text"
                            required=""
                            value={lname}
                            onChange={(e) => setlname(e.target.value)}
                            onFocus={() => setln(true)}
                            onBlur={() => handleChange(1)}
                          />
                          <label
                            className={ln ? styles.label_active : styles.label}
                          >
                            Last Name
                          </label>
                        </div>

                        <div className={styles.input_group}>
                          <input
                            className={styles.input}
                            autoComplete="off"
                            name="nick"
                            type="text"
                            required=""
                            value={nick}
                            onChange={(e) => setnick(e.target.value)}
                            onFocus={() => setnn(true)}
                            onBlur={() => handleChange(2)}
                          />
                          <label
                            className={nn ? styles.label_active : styles.label}
                          >
                            Nickname
                          </label>
                        </div>

                        <div className={styles.position}>
                          <select
                            name="faculty"
                            id="faculty"
                            className={styles.position_select}
                            value={faculty}
                            onChange={(e) => setfaculty(e.target.value)}
                          >
                            <option value="" disabled>
                              Faculty
                            </option>
                            <option value="sict">SICT</option>
                            <option value="saat">SAAT</option>
                            <option value="semt">SEMT</option>
                            <option value="sls">SLS</option>
                            <option value="seet">SEET</option>
                            <option value="sps">SPS</option>
                            <option value="set">SET</option>
                            <option value="sipet">SIPET</option>
                            <option value="sste">SSTE</option>
                          </select>
                        </div>
                        <div className={styles.input_group}>
                          <input
                            className={styles.input}
                            autoComplete="off"
                            name="matric"
                            type="text"
                            required=""
                            value={matric}
                            onChange={(e) => setmatric(e.target.value)}
                            onFocus={() => setmt(true)}
                            onBlur={() => handleChange(3)}
                          />
                          <label
                            className={mt ? styles.label_active : styles.label}
                          >
                            Matric Number
                          </label>
                        </div>
                        <div className={styles.position}>
                          <select
                            name="position"
                            className={styles.position_select}
                            value={position}
                            onChange={(e) => setposition(e.target.value)}
                          >
                            <option value="" disabled>
                              Category
                            </option>
                            <option value="Mr fresher">Mr fresher</option>
                            <option value="Miss fresher">Miss fresher</option>
                            <option value="Face of 200L">Face of 200L</option>
                            <option value="Face of 300L">Face of 300L</option>
                            <option value="Face of 400L">Face of 400L</option>
                            <option value="Face of 500L">Face of 500L</option>
                            <option value="Most political">
                              Most political
                            </option>
                            <option value="Mr Agric">Mr Agric</option>
                            <option value="Miss Agric">Miss Agric</option>
                            <option value="Hour glass">Hour glass</option>
                            <option value="Best wardrobe">Best wardrobe</option>
                            <option value="Entrepreneurship of the Year">
                              Entrepreneurship of the Year
                            </option>
                            <option value="Class rep of the year">
                              Class rep of the year
                            </option>
                            <option value="Sportsmanship Award">
                              Sportsmanship Award
                            </option>
                            <option value="Most expensive Award">
                              Most expensive Award
                            </option>
                            <option value="Photographer of the Year">
                              Photographer of the Year
                            </option>
                            <option value="Media personality of the year">
                              Media personality of the year
                            </option>
                            <option value="Alumni of the Year">
                              Alumni of the Year
                            </option>
                            <option value="Eagle of SAAT">Eagle of SAAT</option>
                            <option value="Falcon of SAAT">
                              Falcon of SAAT
                            </option>
                            <option value="Ambassador of the year">
                              Ambassador of the year
                            </option>
                            <option value="Cool calm  and collected">
                              Cool calm and collected
                            </option>

                            <option value="Best lecturer">Best lecturer</option>
                            <option value="Model of the year">
                              Model of the year
                            </option>
                            <option value="Intellect of the year">
                              Intellect of the year
                            </option>
                            <option value="Hypeman of the year">
                              Hypeman of the year
                            </option>
                            <option value="Face of Agric">Face of Agric</option>
                            <option value="Mr ebony">Mr ebony</option>
                            <option value="Miss ebony">Miss ebony</option>
                            <option value="Slim shady">Slim shady</option>
                            <option value="Big bold and beautiful">
                              Big bold and beautiful
                            </option>
                            <option value="Brand of the Year">
                              Brand of the Year
                            </option>
                            <option value="Artist of the year">
                              Artist of the year
                            </option>
                            <option value="Most influential">
                              Most influential
                            </option>
                            <option value="Most popular">Most popular</option>
                            <option value="Departmental president of the year">
                              Departmental president of the year
                            </option>
                            <option value="Departmental DOS of the year">
                              Departmental DOS of the year
                            </option>
                            <option value="Fashionista & trends">
                              Fashionista & trends
                            </option>
                            <option value="Most reserve M">
                              Most reserve M
                            </option>
                            <option value="Most reserve F">
                              Most reserve F
                            </option>
                            <option value="Executive of the year">
                              Executive of the year
                            </option>
                            <option value="Graphic designer of the year">
                              Graphic designer of the year
                            </option>
                            <option value="Perseverance & Exemplary Award">
                              Perseverance & Exemplary Award
                            </option>

                            <option value="Ambassador of the year">
                              Ambassador of the year
                            </option>
                            <option value="Mc of the year">
                              Mc of the year
                            </option>
                          </select>
                        </div>

                        <button
                          type="submit"
                          className={!submit ? styles.btn : styles.btn_click}
                          onClick={() => setsubmit(true)}
                        >
                          {!submit ? 'Register' : 'Loading...'}
                        </button>
                      </form>

                      {/* <div className={styles.sponsored}>
                        <h4>Sponsored By:</h4>
                        <marquee behavior="" direction="">
                          <Image src={Ager} width={80} height={80} alt="Ager" />
                          <Image
                            className={styles.spons}
                            src={Brand}
                            width={80}
                            height={80}
                            alt="Ager"
                          />
                          <Image
                            className={styles.sponsor}
                            src={Sponsor}
                            width={100}
                            height={100}
                            alt="Ager"
                          />
                        </marquee>
                      </div> */}
                    </section>
                  </div>
                )}
              </div>
            </section>
          </div>
        </div>
      </main>
    </>
  );
}
